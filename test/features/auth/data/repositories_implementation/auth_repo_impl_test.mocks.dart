// Mocks generated by Mockito 5.4.5 from annotations
// in tarcking_app/test/features/auth/data/repositories_implementation/auth_repo_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tarcking_app/features/auth/data/datasource/auth_remote_datasource.dart'
    as _i4;
import 'package:tarcking_app/features/auth/data/models/forget_password_models/forget_password_request.dart'
    as _i6;
import 'package:tarcking_app/features/auth/data/models/forget_password_models/reset_password_request_model.dart'
    as _i8;
import 'package:tarcking_app/features/auth/data/models/forget_password_models/verify_code_request_model.dart'
    as _i7;
import 'package:tarcking_app/features/auth/data/models/login/login_request.dart'
    as _i9;
import 'package:tarcking_app/features/auth/data/models/login/login_response.dart'
    as _i3;
import 'package:tarcking_app/features/auth/domain/responses/auth_response.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthResponse_0<T> extends _i1.SmartFake
    implements _i2.AuthResponse<T> {
  _FakeAuthResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginResponse_1 extends _i1.SmartFake implements _i3.LoginResponse {
  _FakeLoginResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDatasource extends _i1.Mock
    implements _i4.AuthRemoteDatasource {
  MockAuthRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AuthResponse<String>> forgetPassword(
          _i6.ForgetPasswordRequestModel? forgetPasswordRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [forgetPasswordRequestModel],
        ),
        returnValue: _i5.Future<_i2.AuthResponse<String>>.value(
            _FakeAuthResponse_0<String>(
          this,
          Invocation.method(
            #forgetPassword,
            [forgetPasswordRequestModel],
          ),
        )),
      ) as _i5.Future<_i2.AuthResponse<String>>);

  @override
  _i5.Future<_i2.AuthResponse<String>> verifyResetPassword(
          _i7.VerifyCodeRequestModel? verifyCodeRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyResetPassword,
          [verifyCodeRequestModel],
        ),
        returnValue: _i5.Future<_i2.AuthResponse<String>>.value(
            _FakeAuthResponse_0<String>(
          this,
          Invocation.method(
            #verifyResetPassword,
            [verifyCodeRequestModel],
          ),
        )),
      ) as _i5.Future<_i2.AuthResponse<String>>);

  @override
  _i5.Future<_i2.AuthResponse<String>> resetPassword(
          _i8.ResetPasswordRequestModel? resetPasswordRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [resetPasswordRequestModel],
        ),
        returnValue: _i5.Future<_i2.AuthResponse<String>>.value(
            _FakeAuthResponse_0<String>(
          this,
          Invocation.method(
            #resetPassword,
            [resetPasswordRequestModel],
          ),
        )),
      ) as _i5.Future<_i2.AuthResponse<String>>);

  @override
  _i5.Future<_i3.LoginResponse> login(_i9.LoginRequest? loginRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequest],
        ),
        returnValue: _i5.Future<_i3.LoginResponse>.value(_FakeLoginResponse_1(
          this,
          Invocation.method(
            #login,
            [loginRequest],
          ),
        )),
      ) as _i5.Future<_i3.LoginResponse>);
}
