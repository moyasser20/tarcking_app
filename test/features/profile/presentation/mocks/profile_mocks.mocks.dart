// Mocks generated by Mockito 5.4.5 from annotations
// in tarcking_app/test/features/profile/presentation/mocks/profile_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i14;

import 'package:flutter_bloc/flutter_bloc.dart' as _i18;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:tarcking_app/core/errors/api_result.dart' as _i6;
import 'package:tarcking_app/features/profile/data/models/change_password_request_model.dart'
    as _i16;
import 'package:tarcking_app/features/profile/data/models/change_password_response_model.dart'
    as _i2;
import 'package:tarcking_app/features/profile/data/models/edit_profile_request_model.dart'
    as _i11;
import 'package:tarcking_app/features/profile/data/models/edit_profile_response_model.dart'
    as _i10;
import 'package:tarcking_app/features/profile/data/models/upload_photo_response.dart'
    as _i13;
import 'package:tarcking_app/features/profile/domain/entity/user_entity.dart'
    as _i7;
import 'package:tarcking_app/features/profile/domain/repositories/profile_repository.dart'
    as _i15;
import 'package:tarcking_app/features/profile/domain/usecases/edit_profile_data_usecase.dart'
    as _i9;
import 'package:tarcking_app/features/profile/domain/usecases/get_profile_data_usecase.dart'
    as _i4;
import 'package:tarcking_app/features/profile/domain/usecases/upload_photo_usecase.dart'
    as _i12;
import 'package:tarcking_app/features/profile/presentation/viewmodel/profile_viewmodel.dart'
    as _i17;
import 'package:tarcking_app/features/profile/presentation/viewmodel/states/profile_states.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChangePasswordResponseModel_0 extends _i1.SmartFake
    implements _i2.ChangePasswordResponseModel {
  _FakeChangePasswordResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileStates_1 extends _i1.SmartFake implements _i3.ProfileStates {
  _FakeProfileStates_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetProfileDataUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetProfileDataUseCase extends _i1.Mock
    implements _i4.GetProfileDataUseCase {
  MockGetProfileDataUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.ApiResult<_i7.UserEntity>> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<_i6.ApiResult<_i7.UserEntity>>.value(
            _i8.dummyValue<_i6.ApiResult<_i7.UserEntity>>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i7.UserEntity>>);
}

/// A class which mocks [EditProfileDataUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditProfileDataUseCase extends _i1.Mock
    implements _i9.EditProfileDataUseCase {
  MockEditProfileDataUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>> call(
          _i11.EditProfileRequestModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [model],
        ),
        returnValue:
            _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>>.value(
                _i8.dummyValue<_i6.ApiResult<_i10.EditProfileResponseModel>>(
          this,
          Invocation.method(
            #call,
            [model],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>>);
}

/// A class which mocks [UploadPhotoUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUploadPhotoUseCase extends _i1.Mock
    implements _i12.UploadPhotoUseCase {
  MockUploadPhotoUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>> call(_i14.File? photo) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [photo],
        ),
        returnValue: _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>>.value(
            _i8.dummyValue<_i6.ApiResult<_i13.UploadPhotoResponse>>(
          this,
          Invocation.method(
            #call,
            [photo],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>>);
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i15.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i6.ApiResult<_i7.UserEntity>> getProfile() => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
        ),
        returnValue: _i5.Future<_i6.ApiResult<_i7.UserEntity>>.value(
            _i8.dummyValue<_i6.ApiResult<_i7.UserEntity>>(
          this,
          Invocation.method(
            #getProfile,
            [],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i7.UserEntity>>);

  @override
  _i5.Future<_i2.ChangePasswordResponseModel> changePassword(
          _i16.ChangePasswordRequestModel? changePasswordRequestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [changePasswordRequestModel],
        ),
        returnValue: _i5.Future<_i2.ChangePasswordResponseModel>.value(
            _FakeChangePasswordResponseModel_0(
          this,
          Invocation.method(
            #changePassword,
            [changePasswordRequestModel],
          ),
        )),
      ) as _i5.Future<_i2.ChangePasswordResponseModel>);

  @override
  _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>> editProfile(
          _i11.EditProfileRequestModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [model],
        ),
        returnValue:
            _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>>.value(
                _i8.dummyValue<_i6.ApiResult<_i10.EditProfileResponseModel>>(
          this,
          Invocation.method(
            #editProfile,
            [model],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i10.EditProfileResponseModel>>);

  @override
  _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>> uploadPhoto(
          _i14.File? photo) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPhoto,
          [photo],
        ),
        returnValue: _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>>.value(
            _i8.dummyValue<_i6.ApiResult<_i13.UploadPhotoResponse>>(
          this,
          Invocation.method(
            #uploadPhoto,
            [photo],
          ),
        )),
      ) as _i5.Future<_i6.ApiResult<_i13.UploadPhotoResponse>>);
}

/// A class which mocks [ProfileViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileViewModel extends _i1.Mock implements _i17.ProfileViewModel {
  MockProfileViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set user(_i7.UserEntity? _user) => super.noSuchMethod(
        Invocation.setter(
          #user,
          _user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ProfileStates get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeProfileStates_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ProfileStates);

  @override
  _i5.Stream<_i3.ProfileStates> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.ProfileStates>.empty(),
      ) as _i5.Stream<_i3.ProfileStates>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> getProfile() => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void clearProfileCache() => super.noSuchMethod(
        Invocation.method(
          #clearProfileCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i3.ProfileStates? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i18.Change<_i3.ProfileStates>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
